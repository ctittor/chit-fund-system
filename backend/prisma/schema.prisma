generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  CUSTOMER
}

enum AuctionStatus {
  SCHEDULED
  RUNNING
  COMPLETED
}

enum EmiStatus {
  PAID
  PENDING
  MISSED
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  role        Role
  admin       Admin?
  customer    Customer?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Admin {
  id          Int      @id @default(autoincrement())
  name        String
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  createdAt   DateTime @default(now())
}

model Customer {
  id           Int           @id @default(autoincrement())
  name         String
  phone        String
  user         User?         @relation(fields: [userId], references: [id])
  userId       Int?          @unique
  subscriptions Subscription[]
  emiDetails   EmiDetail[]
  bids         Bid[]
  createdAt    DateTime      @default(now())
}

model Chit {
  id           Int         @id @default(autoincrement())
  name         String
  totalAmount  Float
  duration     Int
  installment  Float
  subscriptions Subscription[]
  auctions     Auction[]
  emiDetails   EmiDetail[]
  createdAt    DateTime    @default(now())
}

model Subscription {
  id           Int        @id @default(autoincrement())
  customer     Customer   @relation(fields: [customerId], references: [id])
  customerId   Int
  chit         Chit       @relation(fields: [chitId], references: [id])
  chitId       Int
  startDate    DateTime
  status       String
  createdAt    DateTime   @default(now())
}

model EmiDetail {
  id           Int        @id @default(autoincrement())
  customer     Customer   @relation(fields: [customerId], references: [id])
  customerId   Int
  chit         Chit       @relation(fields: [chitId], references: [id])
  chitId       Int
  amount       Float
  dueDate      DateTime
  status       EmiStatus
  createdAt    DateTime   @default(now())
}

model Auction {
  id           Int        @id @default(autoincrement())
  chit         Chit       @relation(fields: [chitId], references: [id])
  chitId       Int
  auctionDate  DateTime
  status       AuctionStatus
  bids         Bid[]
  createdAt    DateTime   @default(now())
}

model Bid {
  id           Int        @id @default(autoincrement())
  auction      Auction    @relation(fields: [auctionId], references: [id])
  auctionId    Int
  customer     Customer   @relation(fields: [customerId], references: [id])
  customerId   Int
  amount       Float
  createdAt    DateTime   @default(now())
}
